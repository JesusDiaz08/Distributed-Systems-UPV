/*
 *  MYCORBAOBJECTClientImpl.java
 *  Template to build a client to call a CORBA object.
 *  Please replace the string MYCORBAOBJECT with the name of your object following
 *  the instructions detailed in the code comments.
 *
 *  @author Jose Simo. (c) ai2-DISCA-UPV Creative Commons.
 *
 *  Rev: 2017
 */
package client;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.io.PrintWriter;
import java.util.Properties;

import org.omg.CORBA.ORBPackage.InvalidName;
import org.omg.CosNaming.NamingContextExt;
import org.omg.CosNaming.NamingContextExtHelper;
import org.omg.CosNaming.NamingContextPackage.CannotProceed;
import org.omg.CosNaming.NamingContextPackage.NotFound;

///////////Template customization:
// Set the name of the client class (Replace MYCORBAOBJECT with the name of your object).
class EchoClientImpl {

    ///////////Template customization:
    // Declare a reference to your object interface (Replace MYCORBAOBJECT with the name of your object).
    // Check the interface name: See the code generated by idlj when proccesing your idl file.
	private corba.Echo target = null;
	//
	private org.omg.CORBA.ORB orb = null;


	///////////Template customization:
	// Set the name of the class in the constructors (Replace MYCORBAOBJECT with the name of your object).
	/**
	 * Constructor for EchoClientImpl
	 *
	 * @throws IOException
	 */
	public EchoClientImpl() throws IOException {
		initORB(null);
	}

	/**
	 * Constructor for EchoClientImpl
	 *
	 * @throws IOException
	 * @see java.lang.Object#Object()
	 */
	public EchoClientImpl(String[] args) throws IOException {
		initORB(args);
	}

	/**
	 * Initialize ORB.
	 *
	 * @param args
	 * @throws IOException
	 */
	public void initORB(String[] args) throws IOException {


		Properties props = System.getProperties();
		props.setProperty("org.omg.CORBA.ORBClass", "com.sun.corba.se.internal.POA.POAORB");
		props.setProperty("org.omg.CORBA.ORBSingletonClass", "com.sun.corba.se.internal.corba.ORBSingleton");
		props.put("org.omg.CORBA.ORBInitialPort","1050");
		props.put("org.omg.CORBA.ORBInitialHost","localhost");


		// Initialize the ORB
		orb = org.omg.CORBA.ORB.init((String[])args, props);

		// ---- Uncomment below to enable Naming Service access. ----
		org.omg.CORBA.Object ncobj = null;
		try {
			ncobj = orb.resolve_initial_references("NameService");
		} catch (InvalidName e) {
			e.printStackTrace();
		}
		NamingContextExt nc = NamingContextExtHelper.narrow(ncobj);
		org.omg.CORBA.Object obj = null;
		try {
			///////////Template customization:
			// Set the CORBA object name in the Name Service (replace yyyyy with the name).
			obj = nc.resolve_str("EchoObject");
		} catch (NotFound e) {
			e.printStackTrace();
		} catch (CannotProceed e) {
			e.printStackTrace();
		} catch (org.omg.CosNaming.NamingContextPackage.InvalidName e) {
			e.printStackTrace();
		}

		//LineNumberReader input = new LineNumberReader(new FileReader("server.ior"));
		//String ior = input.readLine();
		//org.omg.CORBA.Object obj = orb.string_to_object(ior);

		///////////Template customization:
		// Narrow the CORBA objet to your objet interface using the code generated by "idlj"
		// (Replace MYCORBAOBJECT with the name of your object).
		target = corba.EchoHelper.narrow(obj);
	}

	/**
	 * Obtain ORB Interface.
	 *
	 * @return
	 */
	///////////Template customization:
    // Returns your object interface (Replace MYCORBAOBJECT with the name of your object).
    // See above the "target" declaration.
	public corba.Echo getORBInterface() {
		return target;
	}

	/**
	 * Shutdown ORB.
	 */
	public void shutdown() {
		orb.shutdown(true);
	}

	/**
	 * Test the client class for EchoClientImpl.
	 *
	 * @param args
	 */
	public static void main(String[] args) {
		try {

		    ///////////Template customization:
			// Set the name of the client class (Replace MYCORBAOBJECT with the name of your object).
			EchoClientImpl test = new EchoClientImpl(args);
			// Entradas y salidas del programa
			String input, output;
			PrintWriter stdOut = new PrintWriter(System.out);
			BufferedReader stdIn = new BufferedReader( new InputStreamReader(System.in));

			stdOut.print(">");
			stdOut.flush();

			while((input = stdIn.readLine()) != null){
				output = test.getORBInterface().echoService(input);
				stdOut.println(output);
				stdOut.print("> ");
				stdOut.flush();
			}
			//String response = test.getORBInterface().echoService("Holaaaa");
			//System.out.println("Respuesta: " + response);
			////////////////////////////////////////////////////////////////////////////////////////
			// Get a reference to the remote CORBA object by calling "test.getORBInterface()"
			// Call methods of the remote object in this way: test.getORBInterface().dummyMethod01()"
			////////////////////////////////////////////////////////////////////////////////////////

			// Dispose ORB
			test.shutdown();
		}
		catch(IOException ex) {
			ex.printStackTrace();
		}
	}
}
